name: leaguetool-server Image CI

on:
  push:
    branches: [ "master" ]
    
jobs:
  # build 任务的名称 可以叫build2  test3
  build:
    # 在ubuntu-latest上运行
    runs-on: ubuntu-latest
    # 运行的步骤
    steps:
    # 拉取代码
    - uses: actions/checkout@v3
    # 步骤名称
    - name: Set up JDK 8
      # 设置maven Java
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        # 启用缓存
        cache: maven
    - name: Build with Maven
      # 打包  这些步骤都是在工作目录下进行的 生成的jar文件在target下
      run: mvn -B package --file pom.xml
    - name: Set up Docker Buildx
      # 初始化构建环境
      uses: docker/setup-buildx-action@v2
    - name: Build and push latest
      # 开始构建 在当前目录下找Dockerfile,也可以指定Dockerfile位置
      uses: docker/build-push-action@v3
      with:
        # 当前工作目录
        context: .
        # 构建完成后 push
        push: true
        # tag
        tags: ${{ secrets.DOCKER_REGISTER }}/leaguetool-server:latest
      # ssh远程连接服务器
    - name: SSH REMOTE
      uses: appleboy/ssh-action@master
      with:
       host: ${{ secrets.SSH_HOST}}
       username: ${{ secrets.SSH_USERNAME }}
       password: ${{ secrets.SSH_PASSWORD }}
       port: ${{ secrets.SSH_PORT }}
        #| 执行多行脚本命令。 拉取 停止运行中的 运行新镜像...
       script: |
         docker pull ${{ secrets.DOCKER_REGISTER }}/leaguetool-server:latest
         docker stop leaguetool-server && docker rm leaguetool-server
         docker run -d --network=host --restart=always --name=leaguetool-server ${{ secrets.DOCKER_REGISTER }}/leaguetool-server:latest
  # build 任务的名称 可以叫build2  test3
  linux_arm64:
    # 在ubuntu-latest上运行
    runs-on: ARM64
    strategy:
      matrix:
        os: [ubuntu-20.04]
        arch: [arm64]
    # 运行的步骤
    steps:
    # 拉取代码
    - uses: actions/checkout@v3
    # 步骤名称
    - name: Set up JDK 8
      # 设置maven Java
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        # 启用缓存
        cache: maven
    - name: Build with Maven
      # 打包  这些步骤都是在工作目录下进行的 生成的jar文件在target下
      run: mvn -B package --file pom.xml
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: Set up Docker Buildx
      # 初始化构建环境
      uses: docker/setup-buildx-action@v2
    - name: Build and push latest
      # 开始构建 在当前目录下找Dockerfile,也可以指定Dockerfile位置
      uses: docker/build-push-action@v3
      with:
        # 当前工作目录
        context: .
        # 构建完成后 push
        push: true
        # tag
        tag: ${{ secrets.DOCKER_REGISTER }}/leaguetool-server:linux_arm64 # 默认latest，可以针对平台，修改tag
        platform: linux/arm64/v8
